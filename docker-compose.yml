---
version: "2.1"
services:
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=readflow
    ports:
      - '5432:5432'
    volumes: 
      - pg_data:/var/lib/postgresql/data
    
  heimdall:
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - heimdall_config:/config
    ports:
      - 8090:80
      - 8443:443
    restart: unless-stopped

  podgrab:
    image: akhilrex/podgrab
    container_name: podgrab
    environment:
      - CHECK_FREQUENCY=240
    volumes:
      - podgrab_config:/config
      - podgrab_data:/assets
    ports:
      - 8080:8080
    restart: unless-stopped

  blocky:
    image: spx01/blocky
    container_name: blocky
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "4000:4000/tcp"
    environment:
      - TZ=Europe/Athens # Optional to synchronize the log timestamp with host
    volumes:
      # config file
      - ./blocky/config/config.yml:/app/config.yml

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always

  grafana:
    image: grafana/grafana:6.7.1
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: always

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Athens
      - DOCKER_MODS=linuxserver/calibre-web:calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - calibre-web_config:/config
      - "/mnt/books/Calibre Library:/books"
    ports:
      - 8083:8083
    restart: unless-stopped

  feedpushr:
    image: ncarlier/feedpushr:latest
    container_name: feedpushr
    environment:
      - FP_DB=boltdb:///var/opt/feedpushr.db
    volumes:
      - feedpushr_db:/var/opt
    ports:
      - 8081:8080
    restart: unless-stopped

  readflow:
    image: ncarlier/readflow:edge
    container_name: readflow
    environment:
      - READFLOW_CONFIG=/config/readflow.toml
    volumes:
      - ./readflow/config:/config
    ports:
      - 8082:8080
    restart: unless-stopped

volumes:
  heimdall_config: {}
  podgrab_config: {}
  podgrab_data: {}
  prometheus_data: {}
  grafana_data: {}
  calibre-web_config: {}
  feedpushr_db: {}
  pg_data: {}
